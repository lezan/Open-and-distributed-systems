 
## FUNZIONE JAVA ##
// In ordine alfabetico sono elencate e descritte le funzioni.
// Dove non specificato le funzioni sono da considerarsi public, cioè consumabili dal client.

 - addLibro:
 	Tale funzione riceve in input tutti i campi che devono essere esplicitati quando si vuol inserire un libro all'interno del nostro database.
 	La funzione ritorna un intero, che sarà poi valutato all'interno delle pagine PHP per capire se l'inserimento è andato a buon fine, o se, in caso di errore, cosa sia andato male.
 	La funzione - inizialmente - ricerca all'interno del catalogo (libri_table) se esiste già un libro con lo stesso ISBN, in caso affermativo non aggiunge il libro al catalogo, ma solo alla libreria del venditore (libro_venditore). Se, invece, non dovesse trovare nel catalogo il libro in questione, lo aggiunge sia al catalogo che alla libreria del venditore. 
 	
 - cercaAvatar:
 	Tale funzione si occupa di ricercare l'avatar del profilo dell'utente.
 	Più in dettaglio: la funzione riceve come parametro il nickname dell'utente e ritorna la posizione in cui si trova l'avatar; si cerca all'interno della tabella users il valore dell'attributo position e si ritorna esso come risultato della funzione. 
 	
 - checkEmailLibrerie e checkEmailUsers:
 	Le due funzione sono raggruppate perché svolgono il medesimo compito; entrambe, infatti, si occuppano di controllare che l'email utilizzata durante la registrazione di libreria e utente non sia giù utilizzata.
 	Le due funzioni ricevo come parametro l'email e ritornano un valore booleano che sarà false se l'email non è presente e true se invece è presente.
 	Inoltre, queste funzioni non sono public, cioè non sono accessibili e consumabili dal client, ma sono funzione di gestione che vengono utilizzata esclusivamente all'interno del server per controlli di sistema.
 	
 - checkOwenership:
 	La funzione è utilizata per controllare la paternità di un libro all'interno del catalogo, ovvero quale libreria ha inserito il libro in libri_table.
 	Più nello specifico: la funzione riceve due parametri, email e ISBN e cerca all'interno della tabella libri_table una corrispondenza nella tupla per email e ISBN.
 	A seconda del risultato ottenuto dall'interrogazione del database verrà ritornato un valore intero.
 	Per chiarire meglio la sua utilità, la funzione è da inserirsi nel contesto della modifica del libro presente nel catalogo. Questa infatti è utilizzata all'interno della pagina PHP libro.php per consentire solo all'autore dell'inserimento del libro di poter modificare le caratteristiche del libro.
 	
 - checkPassword:
 	La funzione si occupa semplicemente di controllare se la password inserita durante la registrizazione (sia dell'utente che della libreria) contenga un numero di caratteri non inferiori 8.
 	La funzione riceve come parametro la password da controllare e ritorna un valore booleano che sarà true se la password rispetta i criteri, ovvero false se non rispetterà i requisiti richiesti.
 	
 - checkPasswordLibrerie e checkPasswordUsers:
 	Le due funzioni sono riunite perché assolvono allo stesso compito, cioè controllare la correttezza della password inserita.
 	Nel caso di checkPasswordLibrerie la funzione riceve come parametri l'email e la password, mentre nel caso di checkPasswordUsers riceve il nickname e la password.
 	Entrambe ritornano true se il valore della password coincide, e false in caso contrario.
 	Ovviamente in checkPasswordLibrerie la query è fatta sulla tabella vendors, mentre in checkPasswordUsers è fatta su users.
 	Le due funzioni, inoltre, sono disponibili solo al server, e quindi non consumabili per il client, cioè non sono dichiarate public.
 	
 - connectDatabase:
 	Questa funzione realizza e controlla la connessione al database della libreria. 
 	Questa funzione non riceve nessuna parametro e ritorna tun valore booleano true se viene effettuata con successo o se già presente, ovvero false se, invece, la connessione non avviene.
 	Questa funzione è chiamata ogni volta che un altra funzione è chiamata ad operare sul database;
 	La funzione opera su un oggetto Connection dichiarato globalmente alla classe che è inizializzato a null; connectDabase controlla l'oggetto Connection e se è null prova a creare la connessione, altrimenti (cioè se non è null, il che sta a significare che la connessione con il database è attiva e funzionante) restituisce direttamente true.
 	Ovviamente se l'oggetto Connection è null e la funzione non riesce a stabilire la connessione il database viene ritornato false, ovvero true.
 	La funzione non è dichiarata public, quindi è utilizzata solo all'interno del server.
 	
 - contaLibri:
 	Questa funzione si occupa di contare il numero dei libri presenti in qualunque tabella del database.
 	Nel dettaglio: la funzione riceve come parametro una qualsiasi stringa di query; successivamente essa estrapola la parte significativa e utilizzabile(la stringa a partire dalla parola chiave FROM) e la concatena ad una stringa generale per il conteggio dei libri presenti aventi determinati valori per gli attributi selezionati.
 	La funzioni ritorna un intero corrispondente al numero dei libri trovati per la query aventi come valori quelli passati nella stringa del parametro.
 	Un valore pari a 0 sta a significare errore nella query, sia nessun risultato ottenuto per quei valori.
 	La funzione non è public, quindi non è fruibile da parte del client.
 	
 - contaLibriMod:
 	La funzione semplicemente conta il numero dei libri presenti all'interno della tabella libri_table
 	Non riceve nessun parametro e ritorna un intero, corrispondente al numero di tuple selezionate; un numero negativo è ritornato nel caso in cui si presenti un errore all'interno della funzione.
 	La funzione non è public, quindi non consumabile da parte del client.
 	
 - contaLibriRicerca:
 	La funzione conta il numero dei libri presenti all'interno del catalogo(libri_table) aventi specifici valori come attributi.
 	Nel dettaglio: la funzione riceve come parametro una stringa in cui è contenuto la chiave di ricerca con cui contare il numero di tuple. E' utilizzata nella ricerca semplice, cioè quella che controlla ogni campo, per cui il valore passato come parametro viene impostato su ogni attributo nella tabella e tutti gli attributi messi in OR logico. Qualsiasi tupla che contenga come valore ricercato viene presa in considerazione. Attenzione, l'utilizzo del verbo "contenere" non è casuale, infatti per selezionare una tupla è sufficiente che questa abbia la chiave di ricerca come sua sottostringa.
 	Un valore intero è ritornato. Un numero negativo mi identifica un errore all'interno della funzione, un valore pari a 0, invece, identifica "nessun risultato", mentre un numero maggiore di 0 identifica il successo della funzione e anche il numero di tuple ritornate.
 	
 - contaRecensioni:
 	La funzione ritorna il numero di recensioni presenti all'interno della tabelli commenti.
 	Più nello specifico: non riceve nessun parametro, quindi si intuisce che la funzione fa un conteggio totale delle tuple presenti all'interno della tabella commenti (nessun clausola WHERE è specificata). Come ritorno ha un intero: ad un 0 corrisponde correttezza della funzione e  nessuna tupla presente, ad valore maggiore di 0 corrisponde correttezza della funzione e il numero di tuple trovate, mentre ad numero negativo corrisponde un errore all'interno della funzione.
 	La funzione non è public, e viene utilizzata esclusivamente all'interno del server e non resa disponibile al client.
 	
 - deleteLibro:
 	La funzione elimina un libro presente all'interno della libreria del venditore.
 	Qualche dettaglio: si occupa di eliminare un libro all'interno di libro_venditore solo se questo è posseduto dalla libreria che sta tendando la rimozione. Riceve come parametro l'ISBN e l'email della libreria.
 	Opera in questo modo: ricerca l'email all'interno di vendors, se non trova corrispondenze restituisce errore, altrimenti preleva il nome della libreria che ha l'email passata per parametro. Ottenuto il nome passa ad individuare il libro all'interno di libro_venditore: cerca una corrispondenza sulle tuple che abbiamo ISBN e nome come richiesti; se non trova nulla resiituisce errore, altrimenti elimina il libro.
 	La funzione ritorna un valore diverso da 0 in caso di errore, mentre ritorna 0 in caso di successo.
 	
 - editLibreria:
 	La funzione realizza l'aggiornamento/editing/modifica dei dati presenti all'interno del profilo della libreria.
 	Qualcosa in più: viene fatta una prima distinzione tra modifica password e il resto; infatti essendo la password un dato di fondamentale importanza occorre una seperazione dal resto per dedicargli maggiore attenzione. Viene per prima cosa controllata se una nuova password e una vecchia password sono state inserite; per fare questo si controlla se la stringa è diversa da quella vuota: se lo è, allora si vuol modificare l'email. A questo punto si controlla la validità della vecchia password, per mettere la modifica di questa. Se anche questo controllo riesce si passa al controllo della validità della nuova email, cioè se rispetta i requisiti richiesti. Se pure questo controllo da esito positivo si può effettuare il cambio di password.
 	Un'altra distinzione deve essere fatta nel caso si voglia modificare l'email: questa infatti è la chiave primaria della tabella vendors, e quindi occorre prestare un maggior controllo alla sua modifica. Viene quindi controllato se le due email coincidono: se coincidono si esclude l'email dalla modifica e si modificano gli altri dati; se invece non coincidono si procede a controllare se la nuova email è già utilizzata all'interno della tabella: se è esistente viene restituito errore, altrimenti si modifica l'email.
 	La funzione ritorna un valore intero.
 	
 - editLibroCatalogo:
 	La funzione si occupa di modificare i dati di un libro presente all'interno del catalogo (libri_table).
 	Dettagli: la funzione riceve come parametro un array di stringhe in cui sono presenti i campi del libro.
 	La funzione procede ad aggiornare tutti i campi con i valori presenti all'interno dell'array senza effettuare controlli, questo perché vengono passati ogni volta tutti i valori, anche quelli che non vengono modificati. Se da un lato questa scelta aumenta il carico perché ogni volta vengono modificati attributi inutilmente, dall'altro evita un carico overhead dovuto al controllo da farsi su ogni valore per verificare se questo sia stato o meno aggiornato.
 	Ovviamente la modifica di un libro all'interno di un catalogo è garantita soltanto alla libreria che ha inserito quel libro, e non alle altre. Questo controllo è svolto precedentemente sulla pagina PHP che permette la modifica al catalogo.
 	Tutti i dati del libro sono modificabili, ad eccezione dell'ISBN. Questa esclusione è necessaria per evitare incongruenze che si possono verificare all'interno del database. La modifica dell'ISBN è demandata all'admin, anche su segnalazione delle librerie e degli utenti.
 	La funzione ritorna ancora una volta un intero che avrà valore negativo in caso di errore, e valori pari a 0 in caso di successo.
 	
 - editLibroVenditore:
 	La funzione si occupa di modificare i dati di un libro presente all'interno della libreria del venditore (libro_venditore).
 	Dettagli: la funzione riceve come parametro un array di stringhe in cui sono presenti i campi del libro.
 	La funzione inizialmente ottiene il nome della libreria e passa poi a modificare i campi senza ulteriori controlli.
 	Anche in questa situazione è stata scelta la strada della modifica di tutti i valori, come nel caso della funzione editLibroCatalogo.
 	La funzione ritorna ancora una volta un intero che avrà valore negativo in caso di errore, e valori pari a 0 in caso di successo.
 	
 - editUser:
 	La funzione realizza l'aggiornamento dei dati relativi al profilo di utente.
 	Dettagli: come nel caso di editLibreria, un attenzione maggiore viene riservata alla modifica della password; il procedimento è il medesimo______________________
 	
